@using WebSaleAdmin.Models.Responses.Accounts
@using WebSaleAdmin.Models.Requests.Accounts
@model Tuple<GetCurrentUserPagingRespone, RegisterRequest, List<GetCurrentRolesRespone>>
@section GetListAccountStyles {
    <link rel="stylesheet" href="~/assets/css/lib/datatable/dataTables.bootstrap.min.css">
}
<div class="content">
    <div class="animated fadeIn">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <div class="container">
                            <div class="row" style="
                                 display: flex;
                                 justify-content: center;
                                 align-items: center;">
                                <div class="col-8">
                                    <strong class="card-title">Danh sách người dùng</strong>
                                </div>
                                <div class="col-4" style="
                                     display: flex;
                                     justify-content: right;">
                                    <a class="btn btn-primary text-white" data-toggle="modal" data-target="#addnewuser">Thêm người dùng</a>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <table id="bootstrap-data-table" class="table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th>Chức năng</th>
                                    <th scope="row">Họ và tên</th>
                                    <th scope="row">Số điện thoại</th>
                                    <th scope="row">Địa chỉ</th>
                                    <th scope="row">Quyền</th>
                                    <th scope="row">Trạng thái</th>
                                    <th scope="row">Chỉnh sửa lần cuối</th>
                                    <th scope="row">Ngày tạo</th>
                                    <th scope="row">Tên người dùng</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach(var item in Model.Item1.Data)
                                {
                                    <tr>
                                        <td>
                                            <div class="btn-group">
                                                <button type="button"
                                                    class="btn btn-primary dropdown-toggle"
                                                    data-toggle="dropdown"
                                                    aria-haspopup="true"
                                                    aria-expanded="false">
                                                    Chức năng
                                                </button>
                                                <div class="dropdown-menu">
                                                    <a class="dropdown-item"
                                                    data-toggle="modal"
                                                    data-target="#addnewuser"
                                                    data-edit="true"
                                                    data-user="@Html.Raw(Json.Serialize(item))"
                                                    data-fullname="@item.Fullname"
                                                    data-username="@item.Username"
                                                    data-email="@item.Email"
                                                    data-phone="@item.Phone"
                                                    data-address="@item.Address">Chỉnh sửa</a>
                                                    <a class="dropdown-item" href="#" data-username="@item.Username">Gán quyền</a>
                                                    <a class="dropdown-item" href="#" onclick="handleLockAccount($(this).data('username')); return false;" data-username="@item.Username">Khoá</a>
                                                    <a class="dropdown-item" href="#" onclick="handleDeleteAccount($(this).data('username')); return false;" data-username="@item.Username">Xóa</a>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="text-center">@item.Fullname</td>
                                        <td class="text-center">@item.Phone</td>
                                        <td class="text-center">@item.Address</td>
                                        <td class="text-center">@item.RoleName</td>
                                        @if(@item.IsActive)
                                        {
                                            <td class="text-center">Hoạt động</td>
                                        }
                                        else
                                        {
                                            <td class="text-center">Khoá</td>
                                        }
                                        <td class="text-center">@item.UpdatedAt</td>
                                        <td class="text-center">@item.CreatedAt</td>
                                        <td class="text-center username-input">@item.Username</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>


        </div>
    </div><!-- .animated -->

</div><!-- .content -->
<div class="modal fade" id="addnewuser" tabindex="-1" role="dialog" aria-labelledby="addnewuserLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addnewuserLabel">Add New User</h5>
            </div>
            <div class="modal-body">
                <form id="userForm" onsubmit="handleSubmit(); return false;">
                    <div class="form-group">
                        <label>Full Name</label>
                        @Html.TextBoxFor(x => x.Item2.Fullname, new { @id = "Fullname", @class = "form-control", placeholder = "Your Username" })
                    </div>
                    <div class="form-group">
                        <label>User Name</label>
                        @Html.TextBoxFor(x => x.Item2.Username, new { @id = "Username", @class = "form-control", placeholder = "Your Username" })
                    </div>
                    <div class="form-group">
                        <label>Email address</label>
                        @Html.TextBoxFor(x => x.Item2.Email, new { @id = "Email", Type = "email", @class = "form-control", placeholder = "Your Email" })
                    </div>
                    <div class="form-group">
                        <label>Password</label>
                        @Html.TextBoxFor(x => x.Item2.Password, new { @id = "Password", Type = "password", @class = "form-control", placeholder = "Your Password" })
                    </div>
                    <div class="form-group">
                        <label>Confirm Password</label>
                        @Html.TextBoxFor(x => x.Item2.ConfirmPassword, new { @id = "ConfirmPassword", Type = "password", @class = "form-control", placeholder = "Your Password" })
                    </div>
                    <div class="form-group">
                        <label>Phone Number</label>
                        @Html.TextBoxFor(x => x.Item2.Phone, new { @id = "Phone", @class = "form-control", placeholder = "Your Phone number" })
                    </div>
                    <div class="form-group">
                        <label>Address</label>
                        @Html.TextAreaFor(x => x.Item2.Address, new { @id = "Address", @class = "form-control", placeholder = "YourAddress" })
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Lưu</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="assignRoleModal" tabindex="-1" role="dialog" aria-labelledby="assignRoleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="assignRoleModalLabel">Gán quyền cho người dùng</h5>
            </div>
            <div class="modal-body">
                <form id="assignRoleForm" onsubmit="handleAssignRoleSubmit(); return false;">
                    <div class="form-group">
                        <label for="assignRoleUsername">Tên người dùng</label>
                        <input type="text" id="assignRoleUsername" class="form-control" disabled>
                    </div>
                    <div class="form-group">
                        <label for="roleSelect">Quyền</label>
                        <select id="roleSelect" class="form-control">
                            @foreach (var role in Model.Item3)
                            {
                                <option value="@role.Id">@role.Name</option>
                            }
                        </select>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                        <button type="submit" class="btn btn-primary">Lưu</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section GetListAccountScripts {
    <script src="~/assets/js/lib/data-table/datatables.min.js"></script>
    <script src="~/assets/js/lib/data-table/dataTables.bootstrap.min.js"></script>
    <script src="~/assets/js/lib/data-table/dataTables.buttons.min.js"></script>
    <script src="~/assets/js/lib/data-table/buttons.bootstrap.min.js"></script>
    <script src="~/assets/js/lib/data-table/jszip.min.js"></script>
    <script src="~/assets/js/lib/data-table/vfs_fonts.js"></script>
    <script src="~/assets/js/lib/data-table/buttons.html5.min.js"></script>
    <script src="~/assets/js/lib/data-table/buttons.print.min.js"></script>
    <script src="~/assets/js/lib/data-table/buttons.colVis.min.js"></script>
    <script src="~/assets/js/init/datatables-init.js"></script>


    <script type="text/javascript">

        $(document).ready(function () {
            $('#bootstrap-data-table').DataTable();

            $(document).on('click', '.dropdown-item', function () {
                const username = $(this).data('username');
                handleAssignRoleButton(username);
            });
        })

        function handleAssignRoleButton(username) {
            $('#assignRoleUsername').val(username);
            $('#assignRoleUsername').attr('aria-hidden','false');
            $('#assignRoleModal').modal('show');
        }

        function handleAssignRoleSubmit() {
            var username = $('#assignRoleUsername').val();
            var roleId = $('#roleSelect').val();

            $.ajax({
                url: 'AssignRole',
                type: 'POST',
                data: JSON.stringify({ username: username, roleId: roleId }),
                contentType: 'application/json',
                success: function (res) {
                    if (res.success) {
                        location.reload();
                        $('#assignRoleModal').modal('close');
                    } else {
                    }
                }
            });
        }

        function handleDeleteAccount(username) {
            console.log("data: " + username);
            if (username) {
                $.ajax({
                    url: 'DeleteAccount',
                    type: 'DELETE',
                    data: JSON.stringify({ username: username }),
                    contentType: 'application/json',
                    success: function (res) {
                        if (res.success) {
                            location.reload();
                        }
                    }
                });
            }
        }

        function handleLockAccount(username) {
            console.log("data: " + username);
            if (username) {
                $.ajax({
                    url: 'LockAccount',
                    type: 'PATCH',
                    data: JSON.stringify({ username: username }),
                    contentType: 'application/json',
                    success: function (res) {
                        if (res.success) {
                            location.reload();
                        }
                    }
                });
            }
        }

        function handleSubmit() {
            const isEditMode = $('#userForm').data('edit') || false;
            var data = {
                Fullname: $('#Fullname').val(),
                Username: $('#Username').val(),
                Email: $('#Email').val(),
                Password: $('#Password').val(),
                ConfirmPassword: $('#ConfirmPassword').val(),
                Phone: $('#Phone').val(),
                Address: $('#Address').val()
            };
            $.ajax({
                url: isEditMode ? 'EditAccount' : 'CreateAccount',
                type: isEditMode ? 'PUT' : 'POST',
                data: JSON.stringify(data),
                contentType: 'application/json',
                success: function (res) {
                    if (res.success) {
                        location.reload();
                            $('#addnewuser').modal('close');
                    } else {
                        location.reload();
                    }
                }
            });
        }

        $('#addnewuser').on('show.bs.modal', function (event) {
            const button = $(event.relatedTarget)
            const isEdit = button.data('edit') || false;
            const userInfo = button.data('user') || {};
            let fullname = button.data('fullname') || '';
            let username = button.data('username') || '';
            let email = button.data('email') || '';
            let phone = button.data('phone') || '';
            let address = button.data('address') || '';

            const modal = $(this);
            modal.find('.modal-title').text(isEdit ? 'Edit User' : 'Add New User');
            modal.find('#userForm').data('edit',isEdit);
            if (isEdit) {
                modal.find('#Fullname').val(fullname);
                modal.find('#Username').val(username);
                modal.find('#Email').val(email);
                modal.find('#Phone').val(phone);
                modal.find('#Address').val(address);
                modal.find('#Password').prop('disabled', true);
                modal.find('#ConfirmPassword').prop('disabled', true);
               modal.find('#Username').prop('disabled', true);
            }
            else {
                modal.find('#userForm')[0].reset();
                modal.find('#Password').prop('disabled', false);
                modal.find('#ConfirmPassword').prop('disabled', false);
            }
        })
    </script>
}